apiVersion: apps/v1
kind: Deployment
metadata:
  name: $SERVICE_NAME
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      name: $SERVICE_NAME
  template:
    metadata:
      name: $SERVICE_NAME
      labels:
        name: $SERVICE_NAME
    spec:
      containers:
        - name: $SERVICE_NAME
          image: $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$IMAGE_TAG
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
          envFrom:
            - configMapRef:
                name: $SERVICE_NAME
            - secretRef:
                name: $SERVICE_NAME
      restartPolicy: Always
      imagePullSecrets:
        - name: docker-image-pull-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80

  selector:
    name: $SERVICE_NAME
  type: ClusterIP


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:610881553522:certificate/f114c519-2d8d-4bb2-bd2f-c97f2c785bef
    alb.ingress.kubernetes.io/group.name: yody-alb-dev
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-0db22008bf33f3b08, subnet-0470df01129b3ad8e,
      subnet-0fad0f104581830d7
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  name: $SERVICE_NAME
  namespace: $NAMESPACE
spec:
  rules:
  - host: $HOST
    http:
      paths:
      - backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation
        path: /*
        pathType: ImplementationSpecific
      - backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        path: $SERVICE_PATH*
        pathType: ImplementationSpecific

